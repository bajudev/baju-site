---
import Layout from "./Layout.astro";
import "../styles/global.css";
import { getReadingTime, formatReadingTime } from "../utils/reading-time";
import { getRelatedPosts } from "../utils/related-posts";

const { frontmatter } = Astro.props;
const formattedDate = new Date(frontmatter.pubDate).toLocaleDateString('en-US', {
  weekday: 'long',
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

const content = await Astro.slots.render('default');
const readingTime = getReadingTime(content);

const allPosts = Object.entries(
  import.meta.glob("../pages/posts/*.md", { eager: true })
).map(([path, post]) => ({
  url: path.replace("../pages/", "/").replace(".md", ""),
  ...(post as any).frontmatter,
}));

const currentUrl = Astro.url.pathname;
const relatedPosts = getRelatedPosts(currentUrl, frontmatter.tags, allPosts);
---

<Layout
  title={frontmatter.title}
  description={frontmatter.description}
  publishDate={frontmatter.pubDate}
  tags={frontmatter.tags}
>
  <article class="prose prose-lg dark:prose-invert max-w-none">
    <h1 class="text-4xl font-bold mb-2">{frontmatter.title}</h1>
    <div class="flex items-center gap-4 text-sm text-[var(--color-text)] mb-6">
      <time class="flex items-center gap-1">
        <i class="far fa-calendar-alt text-xs"></i>
        {formattedDate}
      </time>
      <span class="flex items-center gap-1">
        <i class="far fa-clock text-xs"></i>
        {formatReadingTime(readingTime)}
      </span>
    </div>

    {
      frontmatter.tags && (
        <div class="flex flex-wrap gap-2 mb-8">
          {frontmatter.tags.map((tag: unknown) => (
            <a
              href={`/tags/${tag}`}
              class="inline-block bg-[var(--color-border)] text-[var(--color-text)] hover:bg-[var(--color-accent)] hover:text-white rounded-full px-3 py-1 text-sm font-medium transition-all duration-300 hover:scale-105"
            >
              #{tag}
            </a>
          ))}
        </div>
      )
    }

    <slot />
  </article>

  {relatedPosts.length > 0 && (
    <aside class="mt-12 pt-8 border-t border-[var(--color-border)]">
      <h2 class="text-2xl font-bold mb-6 text-[var(--color-heading)]">Related Posts</h2>
      <div class="space-y-4">
        {relatedPosts.map(post => (
          <a
            href={post.url}
            class="block p-4 border border-[var(--color-border)] rounded-lg hover:border-[var(--color-accent)] transition-colors"
          >
            <h3 class="text-lg font-semibold text-[var(--color-heading)] mb-2 hover:text-[var(--color-accent)] transition-colors">
              {post.title}
            </h3>
            <p class="text-sm text-[var(--color-text)] mb-3">{post.description}</p>
            <div class="flex items-center gap-2">
              {post.tags?.slice(0, 3).map((tag: string) => (
                <span class="text-xs px-2 py-1 rounded-full bg-[var(--color-border)] text-[var(--color-text)]">
                  #{tag}
                </span>
              ))}
            </div>
          </a>
        ))}
      </div>
    </aside>
  )}
</Layout>
