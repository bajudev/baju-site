---
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const allPosts = Object.entries(
    import.meta.glob("../posts/*.md", { eager: true }) as Record
      string,
      { frontmatter: any }
    >
  ).map(([path, post]) => ({
    url: path.replace("../", "/").replace(".md", ""),
    ...post.frontmatter,
  }));

  const uniqueTags = [...new Set(allPosts.flatMap((post) => post.tags || []))];

  return uniqueTags.map((tag) => ({
    params: { tag },
    props: {
      posts: allPosts.filter((post) => post.tags.includes(tag)),
    },
  }));
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout title={`Posts tagged "${tag}"`}>
  <section class="space-y-12 stagger-animation">
    <div class="glassmorphism rounded-2xl p-8">
      <h1 class="text-4xl font-bold text-gradient mb-4">Posts tagged "{tag}"</h1>
      <p class="text-lg text-[var(--color-text)]">
        {posts.length}
        {posts.length === 1 ? "post" : "posts"} found
      </p>
    </div>

    <ul class="space-y-6">
      {
        posts.map((post) => (
          <li class="transform transition-all duration-300 hover:scale-[1.01]">
            <a href={post.url} class="block">
              <article class="glassmorphism rounded-2xl p-8 hover:border-[var(--color-accent)] transition-all duration-300 card-hover shine">
                <h3 class="text-2xl font-bold text-[var(--color-heading)] mb-4 hover:text-gradient transition-all">
                  {post.title}
                </h3>
                <p class="text-[var(--color-text)] mb-4 text-lg">{post.description}</p>
                <time class="text-sm text-[var(--color-text)] opacity-60">
                  {new Date(post.pubDate).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
              </article>
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>