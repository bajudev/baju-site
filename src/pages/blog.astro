---
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";

const allPosts = Object.entries(
  import.meta.glob("./posts/*.md", { eager: true })
)
  .map(([path, post]) => ({
    url: path.replace("./", "/").replace(".md", ""),
    ...(post as any).frontmatter,
  }))
  .sort(
    (a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime()
  );

const uniqueTags = [...new Set(allPosts.flatMap((post) => post.tags))];

function getReadingTime(content: { split: (arg0: RegExp) => { (): any; new(): any; length: any; }; }) {
  const wordsPerMinute = 200;
  const words = content.split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
}

function formatDate(dateString: string | number | Date) {
  const date = new Date(dateString);
  const now = new Date();
  const diffTime = Math.abs(now.getTime() - (date instanceof Date ? date.getTime() : new Date(date).getTime()));
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  
  if (diffDays <= 7) {
    return `${diffDays} day${diffDays === 1 ? '' : 's'} ago`;
  }
  return date.toLocaleDateString('en-US', { 
    month: 'short', 
    day: 'numeric',
    year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined
  });
}
---

<Layout title="setofr | blog">
  <section class="space-y-10">
    <div>
      <h1 class="text-3xl font-bold">Blog</h1>
      <div class="flex items-center gap-4 mt-4">
        <p class="text-lg text-[var(--color-text)]">
          This is where I share things that I'm working on, find interesting, want
          to learn more about, or whatever else I feel like writing.
        </p>
      </div>
      <div class="flex items-center gap-4 mt-3 text-sm text-[var(--color-text)]">
        <span>{allPosts.length} post{allPosts.length !== 1 ? 's' : ''}</span>
        <span>â€¢</span>
        <a href="/rss.xml" class="rss-link">RSS feed</a>
      </div>
    </div>

    <section>
      <h2 class="text-2xl font-semibold text-[var(--color-heading)] mb-6">
        Latest Posts
      </h2>
      <ul class="space-y-6">
        {
          allPosts.map((post, index) => (
            <li class="group transform transition-all duration-300 hover:scale-[1.01]">
              <a href={post.url} class="block">
                <article class="bg-[var(--color-bg)] border border-[var(--color-border)] rounded-lg p-6 hover:border-[var(--color-accent)] transition-all duration-300 relative overflow-hidden">
                  {index === 0 && (
                    <div class="absolute top-4 right-4">
                      <span class="px-2 py-1 text-xs font-medium bg-[var(--color-accent)] text-white rounded-full">
                        Latest
                      </span>
                    </div>
                  )}
                  
                  <div class="flex items-start justify-between mb-3">
                    <h3 class="text-2xl font-bold text-[var(--color-heading)] mb-2 group-hover:text-[var(--color-accent)] transition-colors">
                      {post.title}
                    </h3>
                  </div>
                  
                  <p class="text-[var(--color-text)] mb-4 leading-relaxed">
                    {post.description}
                  </p>
                  
                  <div class="flex items-center justify-between">
                    <div class="flex items-center gap-4 text-sm text-[var(--color-text)]">
                      <time class="flex items-center gap-1">
                        <i class="far fa-calendar-alt text-xs"></i>
                        {formatDate(post.pubDate)}
                      </time>
                      <span class="flex items-center gap-1">
                        <i class="far fa-clock text-xs"></i>
                        2 min read
                      </span>
                    </div>
                    
                    {post.tags && (
                      <div class="flex gap-2">
                        {post.tags.slice(0, 2).map((tag: unknown) => (
                          <span class="px-2 py-1 text-xs rounded-full bg-[var(--color-border)] text-[var(--color-text)] group-hover:bg-[var(--color-accent)]/20 group-hover:text-[var(--color-accent)] transition-colors">
                            #{tag}
                          </span>
                        ))}
                        {post.tags.length > 2 && (
                          <span class="px-2 py-1 text-xs rounded-full bg-[var(--color-border)] text-[var(--color-text)]">
                            +{post.tags.length - 2}
                          </span>
                        )}
                      </div>
                    )}
                  </div>
                </article>
              </a>
            </li>
          ))
        }
      </ul>
    </section>

    <section>
      <h2 class="text-2xl font-semibold text-[var(--color-heading)] mb-6">
        Browse by Tag
      </h2>
      <div class="flex flex-wrap gap-3">
        {
          uniqueTags.map((tag) => {
            const postCount = allPosts.filter(post => post.tags?.includes(tag)).length;
            return (
              <a
                href={`/tags/${tag}`}
                class="group px-4 py-2 rounded-full bg-[var(--color-border)] text-[var(--color-text)] font-medium transition-all duration-300 hover:bg-[var(--color-accent)] hover:text-white hover:scale-105 flex items-center gap-2"
              >
                <span>#{tag}</span>
                <span class="text-xs opacity-70 group-hover:opacity-100">
                  {postCount}
                </span>
              </a>
            );
          })
        }
      </div>
    </section>
  </section>
</Layout>